name: "[Workflow] Main"

on:
  push:
    paths:
      - scripts/**
      - templates/**
      - languages/**
      - module.json
    branches:
      - main

jobs:
  lint:
    name: ESLint Javascript
    uses: ./.github/workflows/lint_job.yml

  test:
    name: Jest Tests
    uses: ./.github/workflows/test_job.yml

  documentation:
    name: Create and Publish Documentation
    uses: ./.github/workflows/jsdocs_job.yml

  sonar_cloud:
    name: Sonar Cloud
    needs: ['lint', 'test']
    uses: ./.github/workflows/sonar_cloud_job.yml
    secrets:
      SONARCLOUD_SECRET: ${{ secrets.SONARCLOUD_TOKEN }}

  create_tag_publish:
    name: Bump, Tag and Publish Pre-release
    runs-on: ubuntu-latest
    needs: ['lint', 'test']
    steps:
    - uses: actions/checkout@v3

    - name: Bump version
      id: bump_version
      uses: anothrNick/github-tag-action@1.39.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        INITIAL_VERSION: 1.0.0
        DEFAULT_BUMP: patch
        PRERELEASE_SUFFIX: ${{ env.BRANCH_NAME }}
        RELEASE_BRANCHES: main
        WITH_V: false

    - name: Changelog
      uses: Bullrich/generate-release-changelog@2.0.1
      id: changelog
      env:
        REPO: ${{ github.repository }}

    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: 'module.json'
      env:
        version: ${{steps.bump_version.outputs.new_tag}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{steps.bump_version.outputs.new_tag}}/module.zip

    # Create a zip file with all files required by the module to add to the release
    - run: zip -r ./module.zip module.json LICENSE scripts/ languages/ templates/

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # Set this to false if you want to prevent updating existing releases
        name: ${{ steps.bump_version.outputs.new_tag }}
        draft: false
        prerelease: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./module.zip'
        tag: ${{ steps.bump_version.outputs.new_tag }}
        body: ${{ steps.changelog.outputs.changelog }}
